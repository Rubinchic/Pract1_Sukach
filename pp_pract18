import threading
import time
import random

# --- Завдання 1 Зворотний відлік у потоці ---
def countdown():
    print("Зворотний відлік стартує:")
    for i in range(10, 0, -1):
        print(i)
        time.sleep(1)
    print("Відлік завершено!\n")

# --- Завдання 2 Симуляція завантаження ---
def simulate_download(file_num, duration):
    print(f"Потік {file_num}: Почато завантаження (очікування {duration} с)...")
    time.sleep(duration)
    print(f"Потік {file_num}: Завантаження завершено!")

def loading_simulation():
    threads = []
    for i in range(1, 4):
        t = threading.Thread(target=simulate_download, args=(i, random.randint(3, 5)))
        threads.append(t)
        t.start()
    for t in threads:
        t.join()
    print("Всі завантаження завершені!\n")

# --- Завдання 3 Паралельна обробка даних ---
def sum_part(numbers, result, idx):
    s = sum(numbers)
    print(f"Потік {idx+1}: сума своєї частини = {s}")
    result[idx] = s

def parallel_sum():
    numbers = [random.randint(1, 100) for _ in range(1000)]
    parts = [numbers[i*250:(i+1)*250] for i in range(4)]
    result = [0]*4
    threads = []
    for idx, part in enumerate(parts):
        t = threading.Thread(target=sum_part, args=(part, result, idx))
        threads.append(t)
        t.start()
    for t in threads:
        t.join()
    total = sum(result)
    print(f"Загальна сума = {total}\n")

if __name__ == "__main__":
    # Завдання 1: зворотний відлік у потоці
    t1 = threading.Thread(target=countdown)
    t1.start()
    t1.join()

    # Завдання 2
    loading_simulation()

    # Завдання 3
    parallel_sum()
